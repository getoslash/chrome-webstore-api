name: Release

on:
  push:
    branches:
      - main
    tags:
      - '!*' # Do not execute on tags
  pull_request:
    paths:
      - '!*.MD'

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: v1.x
    - name: Setup Velociraptor
      uses: jurassiscripts/setup-velociraptor@v1
    - name: Check code formatting
      run: vr format
    - name: Lint code
      run: vr lint

  test:
    name: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@master
    - name: Setup Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: v1.x
    - name: Setup Velociraptor
      uses: jurassiscripts/setup-velociraptor@v1
    - name: Generate random random 1-byte signed decimal integer for seed
      id: generate-seed
      run: echo "::set-output name=seed::$(od -vAn -N1 -tu2 < /dev/urandom | xargs)"
    - name: Run all tests in random order
      run: vr test --shuffle=${{ steps.generate-seed.outputs.seed }}

  language:
    name: language
    runs-on: ubuntu-latest
    steps:
    - name: Check language with Alex
      uses: brown-ccv/alex-recommends@v1.2.1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        pr_only: true

  coverage:
    needs: [ test ]
    name: coverage
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@master
    - name: Setup Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: v1.x
    - name: Setup Velociraptor
      uses: jurassiscripts/setup-velociraptor@v1
    - name: Generate random 1-byte signed decimal integer for seed
      id: generate-seed
      run: echo "::set-output name=seed::$(od -vAn -N1 -tu2 < /dev/urandom | xargs)"
    - name: Run all tests in random order
      run: vr test --shuffle=${{ steps.generate-seed.outputs.seed }}
    - name: Generate coverage data
      run: vr coverage
    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: cov_profile.lcov
        flags: unittests
        fail_ci_if_error: true
        verbose: false
